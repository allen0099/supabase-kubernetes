common:
  baseDomain: example.com
  protocol: https

secret:
  jwt:
    anonKey: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyAgCiAgICAicm9sZSI6ICJhbm9uIiwKICAgICJpc3MiOiAic3VwYWJhc2UtZGVtbyIsCiAgICAiaWF0IjogMTY0MTc2OTIwMCwKICAgICJleHAiOiAxNzk5NTM1NjAwCn0.dc_X5iR_VP_qT0zsiyj_I_OZ2T9FtRU2BBNWN8Bu4GE
    serviceKey: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyAgCiAgICAicm9sZSI6ICJzZXJ2aWNlX3JvbGUiLAogICAgImlzcyI6ICJzdXBhYmFzZS1kZW1vIiwKICAgICJpYXQiOiAxNjQxNzY5MjAwLAogICAgImV4cCI6IDE3OTk1MzU2MDAKfQ.DaYlNEoUrrEn2Ig7tqibS-PHK5vgusbcbo7X36XVt4Q
    secret: your-super-secret-jwt-token-with-at-least-32-characters-long
  smtp:
    username: your-mail@example.com
    password: example123456
  dashboard:
    username: supabase
    password: this_password_is_insecure_and_should_be_updated
  db:
    username: supabase_admin
    password: example123456
    database: postgres
  analytics:
    apiKey: your-super-secret-and-long-logflare-key
  supavisor:
    secretKeyBase: UpNVntn3cDxHJpq99YMc1T1AQgQpc8kfYTuRgBiYa15BLrx8etQoXz3gZv1/u2oq
    vaultEncKey: your-encryption-key-32-chars-min

db:
  enabled: true
  image:
    tag: 15.8.1.060
  livenessProbe:
    exec:
      command:
        - pg_isready
        - -U
        - postgres
    initialDelaySeconds: 3
  persistence:
    enabled: true

studio:
  image:
    tag: 2025.06.30-sha-6f5982d
  environment:
    STUDIO_DEFAULT_ORGANIZATION: "My Organization"
    STUDIO_DEFAULT_PROJECT: "My Project"
    NEXT_PUBLIC_ENABLE_LOGS: "true"
  livenessProbe:
    httpGet:
      path: /api/platform/profile
      port: 3000
    initialDelaySeconds: 3

auth:
  image:
    tag: v2.177.0
  environment:
    GOTRUE_URI_ALLOW_LIST: ""
    GOTRUE_DISABLE_SIGNUP: false
    GOTRUE_JWT_ADMIN_ROLES: service_role
    GOTRUE_JWT_AUD: authenticated
    GOTRUE_JWT_DEFAULT_GROUP_NAME: authenticated
    GOTRUE_JWT_EXP: 3600
    GOTRUE_EXTERNAL_EMAIL_ENABLED: true
    GOTRUE_EXTERNAL_ANONYMOUS_USERS_ENABLED: false
    GOTRUE_EXTERNAL_PHONE_ENABLED: true
    GOTRUE_SMS_AUTOCONFIRM: true
    GOTRUE_MAILER_URLPATHS_CONFIRMATION: /auth/v1/verify
    GOTRUE_MAILER_URLPATHS_INVITE: /auth/v1/verify
    GOTRUE_MAILER_URLPATHS_RECOVERY: /auth/v1/verify
    GOTRUE_MAILER_URLPATHS_EMAIL_CHANGE: /auth/v1/verify
    GOTRUE_MAILER_AUTOCONFIRM: "true"
    GOTRUE_SMTP_ADMIN_EMAIL: "your-mail@example.com"
    GOTRUE_SMTP_HOST: "smtp.example.com"
    GOTRUE_SMTP_PORT: "587"
    GOTRUE_SMTP_SENDER_NAME: "your-mail@example.com"

rest:
  image:
    tag: v12.2.12
  environment:
    PGRST_DB_SCHEMAS: public,storage,graphql_public
    PGRST_DB_ANON_ROLE: anon
    PGRST_DB_USE_LEGACY_GUCS: "false"
    PGRST_APP_SETTINGS_JWT_EXP: "3600"

realtime:
  image:
    tag: v2.34.47
  livenessProbe:
    httpGet:
      path: /
      port: 4000
    initialDelaySeconds: 3
  environment:
    APP_NAME: realtime

meta:
  image:
    tag: v0.91.0

storage:
  image:
    tag: v1.25.7
  environment:
    FILE_SIZE_LIMIT: 52428800
    STORAGE_BACKEND: file
    FILE_STORAGE_BACKEND_PATH: /var/lib/storage
    TENANT_ID: stub
    REGION: stub
    GLOBAL_S3_BUCKET: stub
    ENABLE_IMAGE_TRANSFORMATION: "true"
  livenessProbe:
    httpGet:
      path: /status
      port: 5000
    initialDelaySeconds: 3
  persistence:
    enabled: true

imgproxy:
  image:
    tag: v3.8.0
  environment:
    IMGPROXY_BIND: :5001
    IMGPROXY_LOCAL_FILESYSTEM_ROOT: /
    IMGPROXY_USE_ETAG: "true"
    IMGPROXY_ENABLE_WEBP_DETECTION: "true"
  livenessProbe:
    exec:
      command:
        - imgproxy
        - health
    initialDelaySeconds: 3
  persistence:
    enabled: true

kong:
  image:
    repository: kong
    tag: 2.8.1
  environment:
    KONG_DATABASE: "off"
    KONG_DNS_ORDER: LAST,A,CNAME
    KONG_PLUGINS: request-transformer,cors,key-auth,acl,basic-auth
    KONG_NGINX_PROXY_PROXY_BUFFER_SIZE: 160k
    KONG_NGINX_PROXY_PROXY_BUFFERS: "64 160k"
    KONG_DECLARATIVE_CONFIG: /usr/local/kong/kong.yml
    KONG_LOG_LEVEL: info
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /
    tls: []

analytics:
  image:
    tag: 1.14.2
  livenessProbe:
    httpGet:
      path: /health
      port: 4000
    initialDelaySeconds: 3
  environment:
    DB_SCHEMA: _analytics

vector:
  image:
    tag: 0.28.1-alpine
  livenessProbe:
    httpGet:
      path: /health
      port: 9001
    initialDelaySeconds: 3
  ## Vector requires logs from the control plane to function.
  ## This is normally stored in /var/log/pods
  ## Modify these values according to your environment.
  volumeMounts:
    - name: pod-logs
      mountPath: /var/log/pods
  volumes:
    - name: pod-logs
      hostPath:
        path: /var/log/pods

functions:
  image:
    tag: v1.69.6


supavisor:
  enabled: true
  serviceAccount:
    create: true
    name: ""
  image:
    tag: 2.5.7
  replicaCount: 1
  autoscaling:
    enabled: false
  environment:
    API_JWT_SECRET: ""
    METRICS_JWT_SECRET: ""
    VAULT_ENC_KEY: ""
    SECRET_KEY_BASE: ""
    REGION: local
    ERL_AFLAGS: -proto_dist inet_tcp
    POOLER_TENANT_ID: your-tenant-id
    POOLER_DEFAULT_POOL_SIZE: 20
    POOLER_MAX_CLIENT_CONN: 100
    POOLER_POOL_MODE: transaction
    DB_POOL_SIZE: 5
    CLUSTER_POSTGRES: true
  service:
    type: ClusterIP
    db:
      port: 5432
    pooler:
      port: 6543
    api:
      port: 4000
  livenessProbe:
    httpGet:
      path: /api/health
      port: 4000
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 5